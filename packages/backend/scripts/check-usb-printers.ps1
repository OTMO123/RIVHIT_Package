# PowerShell script to detect USB printers
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç USB –ø—Ä–∏–Ω—Ç–µ—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫ —Å–∏—Å—Ç–µ–º–µ

param(
    [switch]$Detailed = $false
)

Write-Host "üîç Checking USB printers..." -ForegroundColor Green

try {
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
    Write-Host "`nüìã All System Printers:" -ForegroundColor Yellow
    $allPrinters = Get-Printer | Select-Object Name, DriverName, PortName, PrinterStatus, Published
    $allPrinters | Format-Table -AutoSize

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ USB –ø–æ—Ä—Ç–æ–≤
    Write-Host "`nüîå USB Printer Ports:" -ForegroundColor Yellow
    $usbPorts = Get-PrinterPort | Where-Object { $_.Name -match "USB|COM|LPT" }
    $usbPorts | Select-Object Name, Description, MonitorName | Format-Table -AutoSize

    # 3. –ü–æ–∏—Å–∫ GoDEX –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
    Write-Host "`nüéØ GoDEX Printers:" -ForegroundColor Green
    $godexPrinters = Get-Printer | Where-Object { $_.Name -match "GoDEX|ZX420" }
    
    if ($godexPrinters) {
        $godexPrinters | Select-Object Name, DriverName, PortName, PrinterStatus | Format-Table -AutoSize
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥–æ–≥–æ GoDEX –ø—Ä–∏–Ω—Ç–µ—Ä–∞
        foreach ($printer in $godexPrinters) {
            Write-Host "üîç Testing printer: $($printer.Name)" -ForegroundColor Cyan
            
            # –¢–µ—Å—Ç–æ–≤–∞—è –ø–µ—á–∞—Ç—å (–±–µ–∑ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–µ—á–∞—Ç–∏)
            try {
                $testJob = Print-TestPage -Name $printer.Name -WhatIf
                Write-Host "  ‚úÖ Printer $($printer.Name) is ready" -ForegroundColor Green
            } catch {
                Write-Host "  ‚ùå Printer $($printer.Name) error: $($_.Exception.Message)" -ForegroundColor Red
            }
        }
    } else {
        Write-Host "‚ùå No GoDEX printers found" -ForegroundColor Red
    }

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ WMI –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ USB
    if ($Detailed) {
        Write-Host "`nüíæ USB Device Details (WMI):" -ForegroundColor Yellow
        $usbDevices = Get-WmiObject -Class Win32_USBControllerDevice | 
            ForEach-Object { [wmi]$_.Dependent } |
            Where-Object { $_.Description -match "print|label" } |
            Select-Object Description, DeviceID, Manufacturer, Status
        
        $usbDevices | Format-Table -AutoSize
    }

    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ System.Management
    Write-Host "`nüì° Printer Connections:" -ForegroundColor Yellow
    $printerConnections = Get-WmiObject -Class Win32_Printer |
        Where-Object { $_.PortName -match "USB|COM|LPT" } |
        Select-Object Name, PortName, DriverName, WorkOffline, PrinterStatus
    
    $printerConnections | Format-Table -AutoSize

    # 6. –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    Write-Host "`nüìä Summary:" -ForegroundColor Green
    Write-Host "Total printers: $($allPrinters.Count)"
    Write-Host "USB/COM/LPT ports: $($usbPorts.Count)"
    Write-Host "GoDEX printers: $($godexPrinters.Count)"
    Write-Host "USB-connected printers: $($printerConnections.Count)"

    # Return structured data for API
    $result = @{
        totalPrinters = $allPrinters.Count
        usbPorts = $usbPorts.Count
        godexPrinters = $godexPrinters.Count
        usbConnectedPrinters = $printerConnections.Count
        printers = $allPrinters
        godexFound = $godexPrinters
        usbConnections = $printerConnections
    }

    return $result | ConvertTo-Json -Depth 3

} catch {
    Write-Host "‚ùå Error checking USB printers: $($_.Exception.Message)" -ForegroundColor Red
    return @{ error = $_.Exception.Message } | ConvertTo-Json
}