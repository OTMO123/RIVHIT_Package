import { Request, Response, NextFunction } from 'express';
import helmet from 'helmet';

/**
 * Security middleware –¥–ª—è RIVHIT Packing System
 * –†–µ–∞–ª–∏–∑—É–µ—Ç –∑–∞—â–∏—Ç—É HTTPS, CSP, –∏ –¥—Ä—É–≥–∏–µ security headers
 * –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID - Single Responsibility (—Ç–æ–ª—å–∫–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
 */

/**
 * üîê HTTPS Redirect Middleware 
 * –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ HTTPS (—Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–û—Ö—Ä–∞–Ω–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—É—Å–∫–∞–µ—Ç —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω—ã–π –≤—Ö–æ–¥, 
 * –∞ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ VIP –≤—Ö–æ–¥ —Å –º–µ—Ç–∞–ª–ª–æ–∏—Å–∫–∞—Ç–µ–ª–µ–º"
 */
export function httpsRedirect(req: Request, res: Response, next: NextFunction): void {
  // –í–†–ï–ú–ï–ù–ù–û: –í—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º HTTP –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log(`üîç HTTPS redirect check: NODE_ENV=${process.env.NODE_ENV}, hostname=${req.hostname}`);
  next();
  return;
  
  // –í development –∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º HTTP
  if (process.env.NODE_ENV !== 'production' || req.hostname === 'localhost' || req.hostname === '127.0.0.1') {
    next();
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è HTTPS
  const isHttps = req.secure || 
                  req.headers['x-forwarded-proto'] === 'https' ||
                  req.headers['x-forwarded-ssl'] === 'on';

  if (!isHttps) {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ HTTPS –≤–µ—Ä—Å–∏—é
    const httpsUrl = `https://${req.get('host')}${req.url}`;
    
    res.status(301).redirect(httpsUrl);
    return;
  }

  next();
}

/**
 * üõ°Ô∏è Content Security Policy (CSP) 
 * –ó–∞—â–∏—â–∞–µ—Ç –æ—Ç XSS –∞—Ç–∞–∫, –æ–ø—Ä–µ–¥–µ–ª—è—è –∫–∞–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–°–ø–∏—Å–æ–∫ VIP –≥–æ—Å—Ç–µ–π –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–µ - –∫–æ–≥–æ –ø—É—Å–∫–∞—Ç—å, –∫–æ–≥–æ –Ω–µ—Ç"
 */
export function setupCSP(): ReturnType<typeof helmet.contentSecurityPolicy> {
  return helmet.contentSecurityPolicy({
    directives: {
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤ - —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏ + inline (–¥–ª—è React)
      scriptSrc: [
        "'self'",                    // –ù–∞—à–∏ —Å–∫—Ä–∏–ø—Ç—ã
        "'unsafe-inline'",           // Inline —Å–∫—Ä–∏–ø—Ç—ã (–Ω—É–∂–Ω–æ –¥–ª—è React)
        'https://unpkg.com',         // CDN –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫
        'https://cdn.jsdelivr.net'   // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π CDN
      ],
      
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Å—Ç–∏–ª–µ–π - —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏ + inline
      styleSrc: [
        "'self'",
        "'unsafe-inline'",           // Inline —Å—Ç–∏–ª–∏ (–Ω—É–∂–Ω–æ –¥–ª—è styled-components)
        'https://fonts.googleapis.com'  // Google Fonts
      ],
      
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤
      fontSrc: [
        "'self'",
        'https://fonts.gstatic.com',  // Google Fonts
        'data:'                       // Data URLs –¥–ª—è –∏–∫–æ–Ω–æ—á–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤
      ],
      
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      imgSrc: [
        "'self'",
        'data:',                      // Data URLs (base64 –∫–∞—Ä—Ç–∏–Ω–∫–∏)
        'https:',                     // HTTPS –∫–∞—Ä—Ç–∏–Ω–∫–∏
        'blob:'                       // Blob URLs (–¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤)
      ],
      
      // API –≤—ã–∑–æ–≤—ã - —Ç–æ–ª—å–∫–æ –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É –∏ RIVHIT API
      connectSrc: [
        "'self'",                     // –ù–∞—à API
        'http://localhost:3001',      // –ù–∞—à backend API (HTTP)
        'https://localhost:3001',     // –ù–∞—à backend API (HTTPS)
        'https://api.rivhit.co.il',   // RIVHIT API (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL)
        'https://api.rivhit.com',     // RIVHIT API (fallback)
        'wss://localhost:*',          // WebSocket –¥–ª—è development
        'ws://localhost:*'            // WebSocket –¥–ª—è development
      ],
      
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤ (–¥–ª—è PDF –∏ —Ç.–¥.)
      objectSrc: ["'none'"],         // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
      
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ media
      mediaSrc: ["'self'"],
      
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è iframe (–±–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ)
      frameSrc: ["'none'"],          // –ë–ª–æ–∫–∏—Ä—É–µ–º iframe
      
      // Base URI - —Ç–æ–ª—å–∫–æ –Ω–∞—à –¥–æ–º–µ–Ω
      baseUri: ["'self'"],
      
      // –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è Web Workers
      workerSrc: ["'self'", 'blob:'],
      
      // Upgrade HTTP –∫ HTTPS
      upgradeInsecureRequests: process.env.NODE_ENV === 'production' ? [] : null
    },
    
    // –í development —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Ä—É—à–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
    reportOnly: process.env.NODE_ENV === 'development'
  });
}

/**
 * üîí Strict Transport Security (HSTS)
 * –ó–∞—Å—Ç–∞–≤–ª—è–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ HTTPS
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–ú–∞–≥–Ω–∏—Ç–Ω—ã–π –∑–∞–º–æ–∫ - —Ä–∞–∑ –ø–æ–ø–∞–ª —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –≤—Ö–æ–¥, 
 * –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–π–¥–µ—à—å —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π"
 */
export function setupHSTS(): ReturnType<typeof helmet.hsts> {
  return helmet.hsts({
    maxAge: 31536000,        // 1 –≥–æ–¥ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    includeSubDomains: true, // –ü—Ä–∏–º–µ–Ω—è—Ç—å –∫–æ –≤—Å–µ–º –ø–æ–¥–¥–æ–º–µ–Ω–∞–º
    preload: true           // –î–æ–±–∞–≤–∏—Ç—å –≤ HSTS preload list –±—Ä–∞—É–∑–µ—Ä–æ–≤
  });
}

/**
 * üö´ X-Frame-Options
 * –ó–∞—â–∏—â–∞–µ—Ç –æ—Ç clickjacking –∞—Ç–∞–∫
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–ó–∞–ø—Ä–µ—Ç –Ω–∞ —Å—ä–µ–º–∫—É –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –∑–æ–Ω–µ"
 */
export function setupFrameOptions(): ReturnType<typeof helmet.frameguard> {
  return helmet.frameguard({ 
    action: 'deny'  // –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø—Ä–µ—â–∞–µ–º iframe
  });
}

/**
 * üïµÔ∏è X-Content-Type-Options
 * –ó–∞–ø—Ä–µ—â–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä—É "—É–≥–∞–¥—ã–≤–∞—Ç—å" MIME —Ç–∏–ø—ã
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ - –ø—Ä–∏–Ω–∏–º–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, 
 * —á—Ç–æ —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—é"
 */
export function setupContentTypeOptions(): ReturnType<typeof helmet.noSniff> {
  return helmet.noSniff();
}

/**
 * üîç Referrer Policy
 * –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –∫–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Referer
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ - –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏"
 */
export function setupReferrerPolicy(): ReturnType<typeof helmet.referrerPolicy> {
  return helmet.referrerPolicy({ 
    policy: 'strict-origin-when-cross-origin'  // –ü–µ—Ä–µ–¥–∞–µ–º –¥–æ–º–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–∏ HTTPS->HTTPS
  });
}

/**
 * üè† Permissions Policy (—Ä–∞–Ω–µ–µ Feature Policy)
 * –ó–∞–ø—Ä–µ—â–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–ø–∞—Å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö API
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ –æ—Ñ–∏—Å–µ - —á—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å, —á—Ç–æ –Ω–µ–ª—å–∑—è"
 */
export function setupPermissionsPolicy(req: Request, res: Response, next: NextFunction): void {
  res.setHeader('Permissions-Policy', 
    'camera=(), ' +           // –ó–∞–ø—Ä–µ—â–∞–µ–º –∫–∞–º–µ—Ä—É
    'microphone=(), ' +       // –ó–∞–ø—Ä–µ—â–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
    'geolocation=(), ' +      // –ó–∞–ø—Ä–µ—â–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
    'payment=(), ' +          // –ó–∞–ø—Ä–µ—â–∞–µ–º Payment API
    'usb=(), ' +              // –ó–∞–ø—Ä–µ—â–∞–µ–º USB API
    'magnetometer=(), ' +     // –ó–∞–ø—Ä–µ—â–∞–µ–º –º–∞–≥–Ω–∏—Ç–æ–º–µ—Ç—Ä
    'gyroscope=(), ' +        // –ó–∞–ø—Ä–µ—â–∞–µ–º –≥–∏—Ä–æ—Å–∫–æ–ø
    'accelerometer=()'        // –ó–∞–ø—Ä–µ—â–∞–µ–º –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä
  );
  next();
}

/**
 * üö® Security Response Headers
 * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
export function setupSecurityHeaders(req: Request, res: Response, next: NextFunction): void {
  // –ó–∞–ø—Ä–µ—â–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ sensitive –¥–∞–Ω–Ω—ã—Ö
  res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, private');
  res.setHeader('Pragma', 'no-cache');
  res.setHeader('Expires', '0');
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ (—Å–∫—Ä—ã–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏)
  res.removeHeader('X-Powered-By');
  res.setHeader('X-Content-Type-Options', 'nosniff');
  res.setHeader('X-Download-Options', 'noopen');
  res.setHeader('X-DNS-Prefetch-Control', 'off');
  
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è RIVHIT
  res.setHeader('X-RIVHIT-Security', 'enabled');
  res.setHeader('X-API-Version', 'v1.0');
  
  next();
}

/**
 * üîß Middleware –¥–ª—è rate limiting
 * –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–¢—É—Ä–Ω–∏–∫–µ—Ç –≤ –º–µ—Ç—Ä–æ - –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π"
 */
const requestCounts = new Map<string, { count: number; resetTime: number }>();

export function rateLimit(maxRequests: number = 100, windowMs: number = 15 * 60 * 1000) {
  return (req: Request, res: Response, next: NextFunction): void => {
    const ip = req.ip || req.connection.remoteAddress || 'unknown';
    const now = Date.now();
    
    const requestInfo = requestCounts.get(ip);
    
    if (!requestInfo || now > requestInfo.resetTime) {
      // –ù–æ–≤–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å
      requestCounts.set(ip, {
        count: 1,
        resetTime: now + windowMs
      });
      next();
      return;
    }
    
    if (requestInfo.count >= maxRequests) {
      res.status(429).json({
        success: false,
        error: {
          code: 'RATE_LIMIT_EXCEEDED',
          message: `–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ú–∞–∫—Å–∏–º—É–º ${maxRequests} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ ${windowMs / 1000} —Å–µ–∫—É–Ω–¥`,
          retryAfter: Math.ceil((requestInfo.resetTime - now) / 1000)
        },
        timestamp: new Date().toISOString()
      });
      return;
    }
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    requestInfo.count++;
    requestCounts.set(ip, requestInfo);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    res.setHeader('X-RateLimit-Limit', maxRequests);
    res.setHeader('X-RateLimit-Remaining', maxRequests - requestInfo.count);
    res.setHeader('X-RateLimit-Reset', new Date(requestInfo.resetTime).toISOString());
    
    next();
  };
}

/**
 * üßπ Input Sanitization Middleware
 * –û—á–∏—â–∞–µ—Ç –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –æ–ø–∞—Å–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
 * 
 * –ú–µ—Ç–∞—Ñ–æ—Ä–∞: "–î–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é"
 */
export function sanitizeInput(req: Request, res: Response, next: NextFunction): void {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫
  const sanitizeString = (str: string): string => {
    if (typeof str !== 'string') return str;
    
    return str
      // –£–¥–∞–ª—è–µ–º HTML —Ç–µ–≥–∏ (–±–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç XSS)
      .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
      .replace(/<[^>]*>/g, '')
      // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
      .replace(/[<>"'&]/g, (match) => {
        const escapeMap: { [key: string]: string } = {
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#x27;',
          '&': '&amp;'
        };
        return escapeMap[match];
      })
      // –£–¥–∞–ª—è–µ–º SQL injection –ø–∞—Ç—Ç–µ—Ä–Ω—ã
      .replace(/(\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION)\b)/gi, '')
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É (–∑–∞—â–∏—Ç–∞ –æ—Ç DoS)
      .substring(0, 10000);
  };
  
  // –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
  const sanitizeObject = (obj: any): any => {
    if (typeof obj === 'string') {
      return sanitizeString(obj);
    }
    
    if (Array.isArray(obj)) {
      return obj.map(sanitizeObject);
    }
    
    if (obj && typeof obj === 'object') {
      const sanitized: any = {};
      for (const [key, value] of Object.entries(obj)) {
        // –°–∞–Ω–∏—Ç–∏–∑–∏—Ä—É–µ–º –∏ –∫–ª—é—á–∏ —Ç–æ–∂–µ
        const cleanKey = sanitizeString(key);
        sanitized[cleanKey] = sanitizeObject(value);
      }
      return sanitized;
    }
    
    return obj;
  };
  
  // –°–∞–Ω–∏—Ç–∏–∑–∏—Ä—É–µ–º body, query, params
  if (req.body) {
    req.body = sanitizeObject(req.body);
  }
  
  if (req.query) {
    req.query = sanitizeObject(req.query);
  }
  
  if (req.params) {
    req.params = sanitizeObject(req.params);
  }
  
  next();
}

/**
 * üõ°Ô∏è –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ security middleware –∑–∞ –æ–¥–∏–Ω –≤—ã–∑–æ–≤
 */
export function setupSecurity() {
  return [
    // –ë–∞–∑–æ–≤—ã–µ helmet –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    helmet({
      contentSecurityPolicy: false, // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
      hsts: false                   // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
    }),
    
    // –ù–∞—à–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    setupCSP(),
    setupHSTS(),
    setupFrameOptions(),
    setupContentTypeOptions(),
    setupReferrerPolicy(),
    setupPermissionsPolicy,
    setupSecurityHeaders,
    
    // Rate limiting (–±–æ–ª–µ–µ –º—è–≥–∫–∏–π –¥–ª—è API)
    rateLimit(1000, 15 * 60 * 1000), // 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ 15 –º–∏–Ω—É—Ç
    
    // Input sanitization
    sanitizeInput,
    
    // HTTPS redirect (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
    httpsRedirect
  ];
}