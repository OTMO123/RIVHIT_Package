// Based on real RIVHIT API structure
export interface RivhitApiResponse<T> {
  error_code: number;
  client_message: string;
  debug_message: string;
  data: T;
}

// Document structure based on Document.New API
export interface RivhitDocument {
  document_type: number;
  document_number?: number; // Auto-generated by RIVHIT
  issue_date: string;
  due_date?: string;
  currency_id: number;
  discount_type?: number;
  discount_value?: number;
  comments?: string;
  project_id?: number;
  agent_id?: number;
  customer_id: number;
  
  // Additional fields for existing documents
  total_amount?: number;
  vat_amount?: number;
  status?: DocumentStatus;
  created_date?: string;
  updated_date?: string;
}

// Real RIVHIT Item structure from API
export interface RivhitItem {
  item_id: number;
  item_name: string;
  item_extended_description: string;
  item_part_num: string | null;
  barcode: string | null;
  item_group_id: number;
  storage_id: number;
  quantity: number;                    // Can be negative!
  cost_nis: number;
  sale_nis: number;
  currency_id: number;
  cost_mtc: number;
  sale_mtc: number;
  picture_link: string | null;
  exempt_vat: boolean;
  avitem: number;
  location: string | null;
  is_serial: number;                   // 0/1 not boolean
  sapak: number;
  item_name_en: string | null;
  item_order: number;
  line?: number;                       // Line number in order (from RIVHIT API)
  unique_id?: string;                  // Unique identifier for UI tracking
}

// Customer structure based on Document.New API
export interface RivhitCustomer {
  customer_id?: number; // Optional for new customers
  last_name: string;
  first_name: string;
  address: string;
  city: string;
  zipcode?: string;
  phone: string;
  email?: string;
  id_number?: string;
  customer_type?: number;
  
  // Additional fields
  company_name?: string;
  vat_id?: string;
  credit_limit?: number;
}

// Payment information
export interface RivhitPayment {
  payment_type: number;
  amount: number;
  due_date?: string;
  bank_code?: string;
  bank_account?: string;
  number_of_payments?: number;
  check_number?: string;
}

// Document status enumeration
export enum DocumentStatus {
  DRAFT = 0,
  PENDING = 1,
  APPROVED = 2,
  IN_PROGRESS = 3,
  PACKED = 4,
  READY_FOR_DELIVERY = 5,
  DELIVERED = 6,
  CANCELLED = 7,
  RETURNED = 8
}

// Document types (from actual RIVHIT API)
export enum DocumentType {
  INVOICE = 1,              // חשבונית מס - Tax Invoice
  INVOICE_RECEIPT = 2,      // חשבונית מס קבלה - Invoice-Receipt
  CREDIT_NOTE = 3,          // חשבונית מס זיכוי - Credit Note
  DELIVERY_NOTE = 4,        // תעודת משלוח - Shipping List
  RETURN = 5,               // תעודת החזרה - Return Document
  QUOTE = 6,                // הצעת מחיר - Price Quote
  ORDER = 7,                // הזמנה - Order
  PROFORMA = 8,             // חשבון חיוב - Proforma Invoice
  PURCHASE_INVOICE = 9,     // חשבונית קניות למלאי
  STOCK_OUT = 10,           // תעודת יציאה ממלאי
  STOCK_IN = 11,            // תעודת כניסה למלאי
  MANUAL_INVOICE = 12,      // חשבונית-קליטה מפנקס
  SUPPLIER_ORDER = 13,      // הזמנה מספק
  SELF_INVOICE = 14,        // חשבונית מס עצמית
  MANUAL_DELIVERY = 100,    // תעודת משלוח מפנקס
  INTER_WAREHOUSE = 999     // ת.משלוח בין מחסנים
}

// Currency types
export enum CurrencyType {
  NIS = 1,
  USD = 2,
  EUR = 3
}

// Complete document with all related data
export interface RivhitFullDocument {
  document: RivhitDocument;
  customer: RivhitCustomer;
  items: RivhitItem[];
  payments?: RivhitPayment[];
}

// Real RIVHIT API Response structures
export interface RivhitItemListResponse {
  item_list: RivhitItem[];
}

export interface RivhitCustomerListResponse {
  customer_list: RivhitCustomer[];
}

export interface RivhitDocumentListResponse {
  document_list: RivhitDocument[];
}

// API request interfaces
export interface CreateDocumentRequest {
  document: Omit<RivhitDocument, 'document_number' | 'created_date' | 'updated_date'>;
  customer: RivhitCustomer;
  items: RivhitItem[];
  payments?: RivhitPayment[];
  options?: {
    send_email?: boolean;
    create_customer?: boolean;
    update_inventory?: boolean;
    prevent_duplicate?: boolean;
    digital_signature?: boolean;
  };
}

// API filter interfaces - based on real RIVHIT API
export interface DocumentFilters {
  api_token: string;
  document_type?: DocumentType;
  customer_id?: number;
  agent_id?: number;
  date_from?: string;
  date_to?: string;
  status?: DocumentStatus;
  search_text?: string;
  limit?: number;
  offset?: number;
}

export interface ItemFilters {
  api_token: string;
  item_group_id?: number;
  storage_id?: number;
  search_text?: string;
  active_only?: boolean;
  limit?: number;
  offset?: number;
}

export interface CustomerFilters {
  api_token: string;
  customer_type?: number;
  city?: string;
  search_text?: string;
  active_only?: boolean;
  limit?: number;
  offset?: number;
}

// Helper types for working with RIVHIT data
export interface PackingItem extends RivhitItem {
  line_id: string;             // Unique line identifier (order_line)
  isPacked: boolean;
  isAvailable: boolean;
  packedQuantity: number;
  notes?: string;
  reason?: string;
  // Box-related properties
  boxCapacity?: number;        // Maximum items per box (extracted from description)
  selectedBoxes?: number;      // Number of boxes selected
}

// App-specific item for UI
export interface AppItem {
  id: number;
  name: string;
  description: string;
  partNumber: string | null;
  barcode: string | null;
  groupId: number;
  storageId: number;
  quantity: number;
  costPrice: number;
  salePrice: number;
  isVatExempt: boolean;
  location: string | null;
  isSerial: boolean;
  pictureUrl: string | null;
  nameEn: string | null;
  order: number;
}

// RivhitConfig moved to config.types.ts to avoid duplication

export interface RivhitApiError {
  code: number;
  message: string;
  details?: Record<string, any>;
}

export enum RivhitErrorCodes {
  SUCCESS = 0,
  UNAUTHORIZED = 401,
  NO_DATA_FOUND = 204,
  INTERNAL_ERROR = 500,
  INVALID_REQUEST = 400,
  RATE_LIMIT_EXCEEDED = 429
}